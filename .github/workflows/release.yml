name: DeFunBobEngine Release Build

on:
  push:
    tags:
      - "*"

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Cache vcpkg
        uses: actions/cache@v2
        with:
          path: vcpkg-master
          key: vcpkg-${{ runner.os }}-${{ hashFiles('**/vcpkg.json') }}
          restore-keys: |
            vcpkg-${{ runner.os }}-

      - name: Install CMake
        run: sudo apt-get install -y cmake

      - name: Install vcpkg
        run: |
          wget -qO vcpkg.tar.gz https://github.com/microsoft/vcpkg/archive/master.tar.gz
          tar -xf vcpkg.tar.gz
          cd vcpkg-master
          ./bootstrap-vcpkg.sh

      - name: Install dependencies
        run: ./vcpkg-master/vcpkg install --triplet x64-linux --feature-flags=manifests

      - name: Build
        run: cmake -DCMAKE_TOOLCHAIN_FILE=./vcpkg-master/scripts/buildsystems/vcpkg.cmake -S . -B build && cmake --build build

      - name: Generate Release Body
        id: generate_release_body
        run:
          echo "body=$(git log --pretty=format:'- %s' $(git describe --tags --abbrev=0)..HEAD)" >> $GITHUB_ENV
          echo "generate_release_body=${{ env.body }}" >> $GITHUB_ENV

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: ${{ steps.generate_release_body.outputs.body }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./build/DeFunBobEngine
          asset_name: DeFunBobEngine
          asset_content_type: application/octet-stream
