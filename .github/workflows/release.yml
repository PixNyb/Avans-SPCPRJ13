name: CMake Release Build

on:
  push:
    tags:
      - v*
      - v*-rc* # prereleases

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Cache vcpkg
        uses: actions/cache@v2
        with:
          path: vcpkg/installed
          key: ${{ runner.os }}-vcpkg-${{ hashFiles('**/vcpkg.json') }}

      - name: Install CMake
        run: |
          wget https://github.com/Kitware/CMake/releases/download/v3.27.0/cmake-3.27.0-Linux-x86_64.sh
          sudo sh cmake-3.27.0-Linux-x86_64.sh --skip-license --prefix=/usr/local

      - name: Install vcpkg
        run: |
          if [ ! -d "./vcpkg" ] ; then
            git clone https://github.com/Microsoft/vcpkg.git vcpkg
          else
            git -C vcpkg pull
          fi
          ./vcpkg/bootstrap-vcpkg.sh

      - name: Install dependencies
        run: ./vcpkg/vcpkg install --triplet x64-linux --feature-flags=manifests

      - name: Build
        run: cmake -DBUILD_TESTS=OFF -DBUILD_CICD=OFF -DCMAKE_TOOLCHAIN_FILE=./vcpkg/scripts/buildsystems/vcpkg.cmake -DCMAKE_BUILD_TYPE=MinSizeRel -S . -B build && cmake --build build

      - name: Create SDK archives
        run: |
          zip -r sdk.zip include
          tar -czf sdk.tar.gz include

      - name: Generate checksum for sdk.zip
        run: sha256sum sdk.zip > sdk.zip.sha256

      - name: Generate checksum for sdk.tar.gz
        run: sha256sum sdk.tar.gz > sdk.tar.gz.sha256

      - name: Generate checksum for DeFunBobEngine
        run: cd build && sha256sum libDeFunBobEngine.a > libDeFunBobEngine.sha256 && cd ..

      - name: Generate release body
        id: release_body
        run: |
          # Collect all information
          version=$(git describe --tags --abbrev=0)
          changelog=$(git log $(git describe --tags --abbrev=0)..HEAD --pretty=format:'- %s ([%h](https://github.com/${{ github.repository }}/commit/%H))' --reverse)
          vcpkg=$(vcpkg list --triplet x64-linux --feature-flags=manifests)
          cmake=$(cmake --version)
          compiler=$(g++ --version)
          system=$(uname -a)
          release=$(cat .github/release.md)

          # Find and replace all values in the release.md with the actual values
          release="${release//'%version%'/$version}"
          release="${release//'%changelog%'/$changelog}"
          release="${release//'%vcpkg%'/$vcpkg}"
          release="${release//'%cmake%'/$cmake}"
          release="${release//'%compiler%'/$compiler}"
          release="${release//'%system%'/$system}"

          # Escape all %, \n and \r characters
          release="${release//'%'/'%25'}"
          release="${release//$'\n'/'%0A'}"
          release="${release//$'\r'/'%0D'}"
          echo "RELEASE_BODY=$release" >> $GITHUB_OUTPUT

      - name: Move and rename files
        run: |
          release_dir="release-${{ github.sha }}"
          if [ ! -d "$release_dir" ] ; then
            mkdir "$release_dir"
          fi
          mv sdk.zip $release_dir/libDeFunBobEngine-sdk.zip
          mv sdk.zip.sha256 $release_dir/libDeFunBobEngine-sdk.zip.sha256
          mv sdk.tar.gz $release_dir/libDeFunBobEngine-sdk.tar.gz
          mv sdk.tar.gz.sha256 $release_dir/libDeFunBobEngine-sdk.tar.gz.sha256
          mv build/libDeFunBobEngine.a $release_dir/libDeFunBobEngine.a
          mv build/libDeFunBobEngine.sha256 $release_dir/libDeFunBobEngine.sha256

      - name: Create release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GH_TOKEN }}
          tag: ${{ github.ref }}
          body: |
            ${{ steps.release_body.outputs.RELEASE_BODY }}
          prerelease: true
          file_glob: true
          file: release-${{ github.sha }}/*
