name: Doxygen

on:
  push:
    branches:
      - main
      - staging
      - development
    tags:
      - v*

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install Doxygen
        run: sudo apt-get install -y doxygen graphviz

      - name: Get branch name or tag name
        id: extract_info
        run: |
          ref=${{ github.ref }}
          IFS='/' read -ra ADDR <<< "$ref"
          echo "BUILD_INFO=${ADDR[2]}" >> $GITHUB_ENV

      - name: Update Doxygen version
        run: |
          sed -i "s/PROJECT_NUMBER.*/PROJECT_NUMBER = $GITHUB_SHA/" Doxyfile
          sed -i "s/OUTPUT_DIRECTORY.*/OUTPUT_DIRECTORY = docs\/${{ env.BUILD_INFO }}/" Doxyfile

      - name: Generate Doxygen documentation
        run: |
          if [ ! -d "docs/${{ env.BUILD_INFO }}" ]; then
            mkdir -p docs/${{ env.BUILD_INFO }}
          fi
          doxygen Doxyfile

      - name: Get latest release tag
        id: get_latest_tag
        run: |
          echo "LATEST_TAG=$(git tag --sort=committerdate | grep -E '[0-9]' | tail -1)" >> $GITHUB_ENV

      - name: Add redirect to latest release tag if there is one, if not, redirect to current build
        run: |
          if [ -z "${{ env.LATEST_TAG }}" ]; then
            echo "<meta http-equiv=\"refresh\" content=\"0; url=./${{ env.BUILD_INFO }}/index.html\" />" > docs/index.html
          else
            echo "<meta http-equiv=\"refresh\" content=\"0; url=./${{ env.LATEST_TAG }}/index.html\" />" > docs/index.html
          fi

      - name: Tar docs
        run: |
          tar -czvf docs.tar.gz docs

      - name: Upload docs
        uses: actions/upload-artifact@v2
        with:
          name: docs.tar.gz
          path: docs.tar.gz

  commit:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          ref: docs

      - name: Get branch name or tag name
        id: extract_info
        run: |
          ref=${{ github.ref }}
          IFS='/' read -ra ADDR <<< "$ref"
          echo "BUILD_INFO=${ADDR[2]}" >> $GITHUB_ENV

      - name: Download docs
        uses: actions/download-artifact@v2
        with:
          name: docs.tar.gz

      - name: Extract docs to current directory
        run: |
          tar -xzvf docs.tar.gz -C .
          mv docs/* .
          rm docs.tar.gz

      - name: Commit docs
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "github-actions@users.noreply.github.com"
          git add ${{ env.BUILD_INFO }} index.html
          git commit -m "Update docs"
          git push origin docs
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
